pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_TAG', defaultValue: '', description: 'Docker tag of the image built by the CI job')
    }

    stages {
        stage("Workspace cleanup") {
            steps {
                cleanWs()
            }
        }

        stage('Git: Code Checkout') {
            steps {
                sh '''
                    git clone https://github.com/GangwarNishant01/Expenses-Tracker-Webapp.git
                    echo "Repository is Cloned Successfully"
                '''
            }
        }

        stage('Verify: Docker Image Tags') {
            steps {
                echo "DOCKER_TAG: ${params.DOCKER_TAG}"
            }
        }

        stage("Update: Kubernetes manifests") {
            steps {
                dir('Expenses-Tracker-Webapp/k8s') {
                    sh """
                        sed -i -e 's|expenses-tracker-app:.*|expenses-tracker-app:${params.DOCKER_TAG}|g' deployment.yml
                    """
                }
            }
        }

        stage("Git: Code update and push to GitHub") {
            steps {
                dir('Expenses-Tracker-Webapp') {
                    script {
                        withCredentials([usernamePassword(credentialsId: 'Github-cred', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                            sh '''
                                echo "Checking repository status:"
                                git status
                                
                                echo "Adding changes to git:"
                                git add .

                                echo "Committing changes:"
                                git commit -m "Updated environment variables" || echo "No changes to commit"

                                echo "Pushing changes to GitHub:"
                                git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/GangwarNishant01/Expenses-Tracker-Webapp.git main
                            '''
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            script {
                emailext(
                    attachLog: true,
                    from: 'gangwarnishant020@gmail.com',
                    subject: "Expenses-Tracker Application has been updated and deployed - '${currentBuild.result}'",
                    body: """
                        <html>
                        <body>
                            <div style="background-color: #FFA07A; padding: 10px;">
                                <p style="color: black; font-weight: bold;">Project: ${env.JOB_NAME}</p>
                            </div>
                            <div style="background-color: #90EE90; padding: 10px;">
                                <p style="color: black; font-weight: bold;">Build Number: ${env.BUILD_NUMBER}</p>
                            </div>
                            <div style="background-color: #87CEEB; padding: 10px;">
                                <p style="color: black; font-weight: bold;">URL: ${env.BUILD_URL}</p>
                            </div>
                        </body>
                        </html>
                    """,
                    to: 'gangwarnishant020@gmail.com',
                    mimeType: 'text/html'
                )
            }
        }

        failure {
            script {
                emailext(
                    attachLog: true,
                    from: 'gangwarnishant020@gmail.com',
                    subject: "Expenses-Tracker Application build failed - '${currentBuild.result}'",
                    body: """
                        <html>
                        <body>
                            <div style="background-color: #FFA07A; padding: 10px;">
                                <p style="color: black; font-weight: bold;">Project: ${env.JOB_NAME}</p>
                            </div>
                            <div style="background-color: #90EE90; padding: 10px;">
                                <p style="color: black; font-weight: bold;">Build Number: ${env.BUILD_NUMBER}</p>
                            </div>
                        </body>
                        </html>
                    """,
                    to: 'gangwarnishant020@gmail.com',
                    mimeType: 'text/html'
                )
            }
        }
    }
}
